AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: "My API Gateway and Lambda function"

Parameters:
  apiGatewayStageName3:
    Type: String
    Default: "dev"

  # HandlerName3:
  #   Type: String
  #   Default: "com.xoriant.meghflow.DBTableColumnValidateMapping.lambda.DBTableColumnValidateMappingLambda::handleRequest"

  # S3KeyName3:
  #   Type: String
  #   Default: "MeghFlow-DBConnMgmt-Lambda-DBConnMgmtFunction.zip"
  
  # LambdaName1:
  #   Type: String


  

Resources:
  apiGateway:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      # Name: "cf-DBTableScheduling"
      # Name: !Sub 'api-gateway-${AWS::Serverless::Function}'
      Name:
       !Join 
        - ''
        - - 'api-gateway'
          - !Ref MeghFlowLambda
      # Description: "DBTableScheduling-apigateway by CF"

  dbconn:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId: !Ref apiGateway
      ParentId: !GetAtt 
        - apiGateway
        - RootResourceId
      PathPart: dbconn
      # endpointConfigurationTypes: REGIONAL


  apiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      Integration:
        IntegrationHttpMethod: "POST"
        Type: AWS
        Credentials: "arn:aws:iam::400410987437:role/ApiGatewayInvokeLambdaRole"
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn:  !GetAtt "MeghFlowLambda.Arn"
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Content-Type: "'application/json'"
        # ResponseTemplates:
        #   text/html: "$input.path('$')"
      ResourceId: !Ref "dbconn" 
      RestApiId: !Ref "apiGateway"
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Content-Type: true

  apiGatewayDeployment:
    Type: "AWS::ApiGateway::Deployment"
    DependsOn:
      - "apiGatewayRootMethod"
    Properties:
      RestApiId: !Ref apiGateway
      StageName: !Ref apiGatewayStageName3

  MeghFlowLambda:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri: DBConnMgmtFunction
      CodeUri: 
        Bucket: rashmi-ohio-sam-demo
        Key: MeghFlow-DBTableSchedulin-DBTableSchedulingETLMap.zip
      # Handler: com.xoriant.meghflow.dbconnmgmt.lambda.DBConnMgmtLambda::handleRequest
      FunctionName: CF-MeghFlow-DBTableSchedulin-DBTableSchedulingETLMapp
      Handler: com.xoriant.meghflow.DBTableSchedulingETLMappings.lambda.DBTableSchedulingETLMappingsLambda::handleRequest
      Runtime: java8
      FunctionName: CF-DBTableSchedulin-DBTableSchedulingETLMapp
      MemorySize: 1024
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          REGION: us-east-2
          DYNAMODB_NAME: CF-DBTableSchedulingETLMappings 
         

  lambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      # LogGroupName: !Sub "/aws/lambda/${MeghFlowLambda}"
      LogGroupName: !Join 
        - ''
        - - /aws/lambda/
          - !Ref MeghFlowLambda
      RetentionInDays: 90

  

Outputs:
  apiGatewayInvokeURL:
    Value: !Sub "https://${apiGateway}.execute-api.${AWS::Region}.amazonaws.com/${apiGatewayStageName3}"

  # lambdaArn:
  #   Value: !GetAtt lambdaFunctionName.Arn

  lambdaname:
    Value: !Ref 'MeghFlowLambda'