pipeline {
    agent any
    parameters {
        string(name: 'VpcCidr_Param', description: 'Please Enter the vpc cidr', defaultValue: '10.0.0.0/16')
        credentials(name: 'CREDENTIALS', description: 'AWS Credentials', credentialType: 'Username with password')       
        string(name: 'ACCOUNT_NAME', description: 'Please Enter the name of the customer to be on boarded. (CustomerName-AssetName)')
        choice(name: 'Region', description: 'Please select the AWS Region', choices: 'eu-west-1\neu-west-2\neu-west-3\neu-central-1\nus-west-1\nus-west-2\nus-east-2\nus-east-1\nap-northeast-1\nap-northeast-2\nap-northeast-3\nap-south-1\nap-southeast-1\nap-southeast-2\nca-central-1\ncn-north-1\ncn-northwest-1\nsa-east-1')
        string(name: 'PrivateAZASubnet_Block', description: 'Please Enter the private subnet cidr for availability zone a', defaultValue: '10.0.1.0/24')
        string(name: 'PrivateAZBSubnet_Block', description: 'Please Enter the private subnet cidr for availability zone b', defaultValue: '10.0.2.0/24')
        string(name: 'PrivateAZCSubnet_Block',  description: 'Please Enter the private subnet cidr for availability zone c',  defaultValue: '10.0.3.0/24')
        string(name: 'PublicAZASubnet_Block', description: 'Please Enter the public subnet cidr for availability zone a', defaultValue: '10.0.4.0/24')
        string(name: 'PublicAZBSubnet_Block',  description: 'Please Enter the public subnet cidr for availability zone b',  defaultValue: '10.0.5.0/24')
        string(name: 'PublicAZCSubnet_Block',  description: 'Please Enter the public subnet cidr for availability zone c',  defaultValue: '10.0.6.0/24')
        booleanParam(name: 'APPLY_CHANGES', defaultValue: false, description: 'If not opted, it will be dry run')
    }
     stages {
        stage('Preparation') {
            steps {
            git 'https://github.com/naoleyrashmi/CodeBuild.git'
            }
        }  
        stage("collect params") {
            steps {
                 sh '''
                    #!/bin/bash
                    export VpcCidrParam=${VpcCidr_Param}
                    export REGION=${Region}
                    export AccountName=${ACCOUNT_NAME}
                    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} 
                    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                    export PrivateAZASubnetBlock=${PrivateAZASubnet_Block}
                    export PrivateAZBSubnetBlock=${PrivateAZBSubnet_Block}
                    export PrivateAZCSubnetBlock=${PrivateAZCSubnet_Block}
                    export PublicAZASubnetBlock=${PublicAZASubnet_Block}
                    export PublicAZBSubnetBlock=${PublicAZBSubnet_Block}
                    export PublicAZCSubnetBlock=${PublicAZCSubnet_Block}
                    python generate_CF_params.py "VpcCidrParam REGION AccountName PrivateAZASubnetBlock PrivateAZBSubnetBlock PrivateAZCSubnetBlock PublicAZASubnetBlock PublicAZBSubnetBlock PublicAZCSubnetBlock" ${BUILD_ID}
                 '''
            }
        } 
       
        stage('Deploy Infrastructure') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: CREDENTIALS, secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                withAWS(region: Region){
                script{
                def outputs = cfnUpdate(
                    stack: "${Account_Name}-vpc-app", 
                    file:'vpc.yaml', 
                    paramsFile: "params-${BUILD_ID}.yaml", 
                    timeoutInMinutes: 60, 
                    pollInterval: 60000,
                    onFailure: 'ROLLBACK'
                )
                echo "${outputs}"    
            }
        }
    }
}
}
}
}